[
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "randint",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "kutuphane.kutuphane1",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "kutuphane.kutuphane1",
        "description": "kutuphane.kutuphane1",
        "detail": "kutuphane.kutuphane1",
        "documentation": {}
    },
    {
        "label": "min",
        "kind": 5,
        "importPath": "Odevler.SayiTahmin.sayiTahminOyunu",
        "description": "Odevler.SayiTahmin.sayiTahminOyunu",
        "peekOfCode": "min = 1\nmax = 100\nbilgisayar = randint(1,100)\ntahminlerim = []\nwhile True:\n    tahmin = input(\"{}-{} arası bir sayi giriniz: \".format(min,max))\n    if tahmin == \"q\":\n        break\n    elif not tahmin.isdigit():\n        print(\"Bir SAYI girin dedim.\")",
        "detail": "Odevler.SayiTahmin.sayiTahminOyunu",
        "documentation": {}
    },
    {
        "label": "max",
        "kind": 5,
        "importPath": "Odevler.SayiTahmin.sayiTahminOyunu",
        "description": "Odevler.SayiTahmin.sayiTahminOyunu",
        "peekOfCode": "max = 100\nbilgisayar = randint(1,100)\ntahminlerim = []\nwhile True:\n    tahmin = input(\"{}-{} arası bir sayi giriniz: \".format(min,max))\n    if tahmin == \"q\":\n        break\n    elif not tahmin.isdigit():\n        print(\"Bir SAYI girin dedim.\")\n        continue",
        "detail": "Odevler.SayiTahmin.sayiTahminOyunu",
        "documentation": {}
    },
    {
        "label": "bilgisayar",
        "kind": 5,
        "importPath": "Odevler.SayiTahmin.sayiTahminOyunu",
        "description": "Odevler.SayiTahmin.sayiTahminOyunu",
        "peekOfCode": "bilgisayar = randint(1,100)\ntahminlerim = []\nwhile True:\n    tahmin = input(\"{}-{} arası bir sayi giriniz: \".format(min,max))\n    if tahmin == \"q\":\n        break\n    elif not tahmin.isdigit():\n        print(\"Bir SAYI girin dedim.\")\n        continue\n    tahmin = int(tahmin)",
        "detail": "Odevler.SayiTahmin.sayiTahminOyunu",
        "documentation": {}
    },
    {
        "label": "tahminlerim",
        "kind": 5,
        "importPath": "Odevler.SayiTahmin.sayiTahminOyunu",
        "description": "Odevler.SayiTahmin.sayiTahminOyunu",
        "peekOfCode": "tahminlerim = []\nwhile True:\n    tahmin = input(\"{}-{} arası bir sayi giriniz: \".format(min,max))\n    if tahmin == \"q\":\n        break\n    elif not tahmin.isdigit():\n        print(\"Bir SAYI girin dedim.\")\n        continue\n    tahmin = int(tahmin)\n    tahminlerim.append(tahmin)",
        "detail": "Odevler.SayiTahmin.sayiTahminOyunu",
        "documentation": {}
    },
    {
        "label": "goruntule",
        "kind": 2,
        "importPath": "Odevler.SifreYonetici.sifreYonetici",
        "description": "Odevler.SifreYonetici.sifreYonetici",
        "peekOfCode": "def goruntule():\n    dosya = open(\"/home/debinci/Desktop/NOVA_Dersler/Ders-16/sifre.txt\",\"r\")\n    for line in dosya:\n        kullanici, sifre = line.split(\"|\")\n        print(\"Kullanıcı Adı: {}\\t Sifre: {}\".format(kullanici, sifre.replace(\"\\n\",\"\")))\ndef ekle():\n    kullanici = input(\"Kullanıcı Adi Giriniz: \")\n    sifre = input(\"Sifre Giriniz: \")\n    dosya = open(\"/home/debinci/Desktop/NOVA_Dersler/Ders-16/sifre.txt\",\"a\")\n    dosya.write(kullanici+\"|\"+sifre)",
        "detail": "Odevler.SifreYonetici.sifreYonetici",
        "documentation": {}
    },
    {
        "label": "ekle",
        "kind": 2,
        "importPath": "Odevler.SifreYonetici.sifreYonetici",
        "description": "Odevler.SifreYonetici.sifreYonetici",
        "peekOfCode": "def ekle():\n    kullanici = input(\"Kullanıcı Adi Giriniz: \")\n    sifre = input(\"Sifre Giriniz: \")\n    dosya = open(\"/home/debinci/Desktop/NOVA_Dersler/Ders-16/sifre.txt\",\"a\")\n    dosya.write(kullanici+\"|\"+sifre)\ndef sifreDegistir():\n    satirlar = []\n    kullaniciMevcutMu=False\n    kullanici = input(\"Hangi kullanici : \")\n    yeniSifre = input(\"Yeni Sifre : \")",
        "detail": "Odevler.SifreYonetici.sifreYonetici",
        "documentation": {}
    },
    {
        "label": "sifreDegistir",
        "kind": 2,
        "importPath": "Odevler.SifreYonetici.sifreYonetici",
        "description": "Odevler.SifreYonetici.sifreYonetici",
        "peekOfCode": "def sifreDegistir():\n    satirlar = []\n    kullaniciMevcutMu=False\n    kullanici = input(\"Hangi kullanici : \")\n    yeniSifre = input(\"Yeni Sifre : \")\n    dosya = open(\"/home/debinci/Desktop/NOVA_Dersler/Ders-16/sifre.txt\",\"r\")\n    for satir in dosya:\n        satirlar.append(satir.replace(\"\\n\",\"\"))\n    dosya.close()\n    i = 0",
        "detail": "Odevler.SifreYonetici.sifreYonetici",
        "documentation": {}
    },
    {
        "label": "kullaniciSil",
        "kind": 2,
        "importPath": "Odevler.SifreYonetici.sifreYonetici",
        "description": "Odevler.SifreYonetici.sifreYonetici",
        "peekOfCode": "def kullaniciSil():\n    satirlar=[]\n    kullaniciMevcutMu=False\n    kullanici = input(\"Kullanici Adı Giriniz : \")\n    dosya = open(\"/home/debinci/Desktop/NOVA_Dersler/Ders-16/sifre.txt\",\"r\")\n    for satir in dosya:\n        satirlar.append(satir.replace(\"\\n\",\"\"))\n    dosya.close()\n    i = 0\n    for satir in satirlar:",
        "detail": "Odevler.SifreYonetici.sifreYonetici",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "Odevler.SifreYonetici.sifreYonetici",
        "description": "Odevler.SifreYonetici.sifreYonetici",
        "peekOfCode": "def main():\n    secim = input(\"Yapmak istediğiniz işlemi seçiniz : \\n\" + \\\n                  \"1. Kullanıcı ve Şifre Görüntüleme \\n\" + \\\n                  \"2. Kullanıcı Ekleme\\n\" + \\\n                  \"3. Kullanıcı Silme\\n\" + \\\n                  \"4. Şifre Değiştirme\\n\"+ \\\n                  \"5. Çıkış\\n\" + \\\n                  \"Seçiminiz : \")\nmain()",
        "detail": "Odevler.SifreYonetici.sifreYonetici",
        "documentation": {}
    },
    {
        "label": "metin",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "metin = input(\"Bir metin giriniz : \")\ntersMetin = metin[::-1]\nprint(metin[::-1])\nprint(tersMetin)\n#ALISTIRMA - 2\n#Kullanıcı tarafından metin ve sayılardan olusan bir ifade girilir. Girilen ifade içinde karakterlerin ve sayıların adetleri ekrana yazdırılır.\n#------------------------------------------------\ntext = input(\"Rastgele bir metin giriniz : \")\ndigitNum = 0\nletterNum = 0",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "tersMetin",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "tersMetin = metin[::-1]\nprint(metin[::-1])\nprint(tersMetin)\n#ALISTIRMA - 2\n#Kullanıcı tarafından metin ve sayılardan olusan bir ifade girilir. Girilen ifade içinde karakterlerin ve sayıların adetleri ekrana yazdırılır.\n#------------------------------------------------\ntext = input(\"Rastgele bir metin giriniz : \")\ndigitNum = 0\nletterNum = 0\nfor harf in text:",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "text",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "text = input(\"Rastgele bir metin giriniz : \")\ndigitNum = 0\nletterNum = 0\nfor harf in text:\n    if harf.isdigit():\n        digitNum+=1\n    if harf.isalpha():\n        letterNum+=1\nprint(\"Metin içerisinde {} adet harf ve {} adet sayı bulunmaktadır\".format(letterNum, digitNum))\n#ALISTIRMA - 3",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "digitNum",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "digitNum = 0\nletterNum = 0\nfor harf in text:\n    if harf.isdigit():\n        digitNum+=1\n    if harf.isalpha():\n        letterNum+=1\nprint(\"Metin içerisinde {} adet harf ve {} adet sayı bulunmaktadır\".format(letterNum, digitNum))\n#ALISTIRMA - 3\n#Kullanıcı bir metin/kelime ve bu metin/kelime içinde aranacak bir harf girer. Aranan harfin metin içinde kaç defa geçtigi ekrana yazdırılır.",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "letterNum",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "letterNum = 0\nfor harf in text:\n    if harf.isdigit():\n        digitNum+=1\n    if harf.isalpha():\n        letterNum+=1\nprint(\"Metin içerisinde {} adet harf ve {} adet sayı bulunmaktadır\".format(letterNum, digitNum))\n#ALISTIRMA - 3\n#Kullanıcı bir metin/kelime ve bu metin/kelime içinde aranacak bir harf girer. Aranan harfin metin içinde kaç defa geçtigi ekrana yazdırılır.\n#------------------------------------------------",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "mainText",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "mainText = input(\"Bir uzun metin girin : \").lower()\naranacakHarf = input(\"Aranacak Harfi girin :\").lower()\nprint(\"{} harfi, metin içinde {} defa geçmektedir\".format(aranacakHarf, mainText.count(aranacakHarf)))\n#ALISTIRMA - 4\n#Kullanıcı tarafından girilecek olan bir kelimenin “palindrom” olup olmadıgını kontrol edip sonucu ekrana yazdırın.\n#------------------------------------------------\nword = input(\"Bir kelime giriniz\")\nif word == word[::-1]:\n    print(\"Kelimeniz bir palidromdur\")\nelse:",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "aranacakHarf",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "aranacakHarf = input(\"Aranacak Harfi girin :\").lower()\nprint(\"{} harfi, metin içinde {} defa geçmektedir\".format(aranacakHarf, mainText.count(aranacakHarf)))\n#ALISTIRMA - 4\n#Kullanıcı tarafından girilecek olan bir kelimenin “palindrom” olup olmadıgını kontrol edip sonucu ekrana yazdırın.\n#------------------------------------------------\nword = input(\"Bir kelime giriniz\")\nif word == word[::-1]:\n    print(\"Kelimeniz bir palidromdur\")\nelse:\n    print(\"Sadece bir kelime işte...\")    ",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "word",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "word = input(\"Bir kelime giriniz\")\nif word == word[::-1]:\n    print(\"Kelimeniz bir palidromdur\")\nelse:\n    print(\"Sadece bir kelime işte...\")    \n#ALISTIRMA - 5\n#Kullanıcı tarafından girilen bir metinin kaç kelimeden olustugunu bulup, ekrana yazdırınız.\n#------------------------------------------------\nmainText = input(\"en az 10 kelimelik bir metin girin : \")\nwordList = mainText.split(\" \")",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "mainText",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "mainText = input(\"en az 10 kelimelik bir metin girin : \")\nwordList = mainText.split(\" \")\nprint(\"Metniniz {} kelimeden oluşmaktadır.\".format(len(wordList)))\n#ALISTIRMA - 6\n#Kullanıcının girdigi matematiksel ifadeye göre islemi yapıp ekrana yazdırınız.\n# NOT : Bir matematiksel islem sadece <sayı><islem><sayi> seklinde olabilir. Orn: 15+14 gibi.\noperatorler = [\"+\",\"-\",\"*\",\"/\"]\nislem = input(\"Matematiksel bir islem girin (Örn:10*12): \")\nfor n in islem:\n  if n in operatorler:",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "wordList",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "wordList = mainText.split(\" \")\nprint(\"Metniniz {} kelimeden oluşmaktadır.\".format(len(wordList)))\n#ALISTIRMA - 6\n#Kullanıcının girdigi matematiksel ifadeye göre islemi yapıp ekrana yazdırınız.\n# NOT : Bir matematiksel islem sadece <sayı><islem><sayi> seklinde olabilir. Orn: 15+14 gibi.\noperatorler = [\"+\",\"-\",\"*\",\"/\"]\nislem = input(\"Matematiksel bir islem girin (Örn:10*12): \")\nfor n in islem:\n  if n in operatorler:\n    parcalar= islem.split(n)",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "operatorler",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "operatorler = [\"+\",\"-\",\"*\",\"/\"]\nislem = input(\"Matematiksel bir islem girin (Örn:10*12): \")\nfor n in islem:\n  if n in operatorler:\n    parcalar= islem.split(n)\n    if n == \"+\":\n      sonuc = int(parcalar[0]) + int(parcalar[1])\n    if n == \"-\":\n      sonuc = int(parcalar[0]) - int(parcalar[1])\n    if n == \"*\":",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "islem",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "islem = input(\"Matematiksel bir islem girin (Örn:10*12): \")\nfor n in islem:\n  if n in operatorler:\n    parcalar= islem.split(n)\n    if n == \"+\":\n      sonuc = int(parcalar[0]) + int(parcalar[1])\n    if n == \"-\":\n      sonuc = int(parcalar[0]) - int(parcalar[1])\n    if n == \"*\":\n      sonuc = int(parcalar[0]) * int(parcalar[1])",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "print(\"{}",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "print(\"{} = {}\".format(islem, sonuc))\n#ALISTIRMA - 7\n#Rastgele sayılar ile doldurulmus bir tam sayı listesinin, en küçük ve en büyük elemalarını,\n# negatif sayıların ve pozitif sayıların adedini ekrana yazdırınız.\n#------------------------------------------------\ntamSayiList = [12,25,15,36,22,54,69,85,665,-51,-8,-6,54,-53]\nsifirdanKucuk = 0\nenBuyuk = max(tamSayiList)\nenKucuk = min(tamSayiList)\nfor n in tamSayiList:",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "tamSayiList",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "tamSayiList = [12,25,15,36,22,54,69,85,665,-51,-8,-6,54,-53]\nsifirdanKucuk = 0\nenBuyuk = max(tamSayiList)\nenKucuk = min(tamSayiList)\nfor n in tamSayiList:\n  if n < 0:\n    sifirdanKucuk +=1\nprint(\"Elinizdeki listenin en küçük değeri {}, \\\nen büyük değeri ise {} dir. \\\nSayi listenizde toplam {} adet negatif sayı bulunmaktadır.\".format(enKucuk, enBuyuk, sifirdanKucuk))",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "sifirdanKucuk",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "sifirdanKucuk = 0\nenBuyuk = max(tamSayiList)\nenKucuk = min(tamSayiList)\nfor n in tamSayiList:\n  if n < 0:\n    sifirdanKucuk +=1\nprint(\"Elinizdeki listenin en küçük değeri {}, \\\nen büyük değeri ise {} dir. \\\nSayi listenizde toplam {} adet negatif sayı bulunmaktadır.\".format(enKucuk, enBuyuk, sifirdanKucuk))\n#ALISTIRMA - 8",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "enBuyuk",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "enBuyuk = max(tamSayiList)\nenKucuk = min(tamSayiList)\nfor n in tamSayiList:\n  if n < 0:\n    sifirdanKucuk +=1\nprint(\"Elinizdeki listenin en küçük değeri {}, \\\nen büyük değeri ise {} dir. \\\nSayi listenizde toplam {} adet negatif sayı bulunmaktadır.\".format(enKucuk, enBuyuk, sifirdanKucuk))\n#ALISTIRMA - 8\n#Rastgele tam sayılardan olusan iki liste nin elemanları ile ilgili olarak :",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "enKucuk",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "enKucuk = min(tamSayiList)\nfor n in tamSayiList:\n  if n < 0:\n    sifirdanKucuk +=1\nprint(\"Elinizdeki listenin en küçük değeri {}, \\\nen büyük değeri ise {} dir. \\\nSayi listenizde toplam {} adet negatif sayı bulunmaktadır.\".format(enKucuk, enBuyuk, sifirdanKucuk))\n#ALISTIRMA - 8\n#Rastgele tam sayılardan olusan iki liste nin elemanları ile ilgili olarak :\n#- Her iki listenin elemanlarını içeren üçüncü bir liste olusturun",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "liste1",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "liste1 = [1,5,2,6,9]\nliste2 = [8,4,7,2,6]\nliste3 = liste1.copy()\nliste3.extend(liste2)\nprint(liste3)\n#2\nessizListe = liste1.copy()\nfor eleman in liste2:\n    if eleman not in essizListe:\n        essizListe.append(eleman)",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "liste2",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "liste2 = [8,4,7,2,6]\nliste3 = liste1.copy()\nliste3.extend(liste2)\nprint(liste3)\n#2\nessizListe = liste1.copy()\nfor eleman in liste2:\n    if eleman not in essizListe:\n        essizListe.append(eleman)\nprint(essizListe)",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "liste3",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "liste3 = liste1.copy()\nliste3.extend(liste2)\nprint(liste3)\n#2\nessizListe = liste1.copy()\nfor eleman in liste2:\n    if eleman not in essizListe:\n        essizListe.append(eleman)\nprint(essizListe)\n#3",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "essizListe",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "essizListe = liste1.copy()\nfor eleman in liste2:\n    if eleman not in essizListe:\n        essizListe.append(eleman)\nprint(essizListe)\n#3\nbenzersizListe = []\nfor item in liste1:\n    if item not in liste2:\n        benzersizListe.append(item)",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "benzersizListe",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "benzersizListe = []\nfor item in liste1:\n    if item not in liste2:\n        benzersizListe.append(item)\nfor item in liste2:\n    if item not in liste1:\n        benzersizListe.append(item)\nprint(benzersizListe)\n#4\nprint(max(liste1))",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "toplam",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "toplam = 0\nsayac = 0\nort = 0\nwhile True:\n    cevap = input(\"Giriş yapınız\")\n    if cevap.isdigit():\n        toplam += int(cevap)\n        sayac +=1\n    elif cevap.lower()==\"tamam\":\n        ort = toplam / sayac",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "sayac",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "sayac = 0\nort = 0\nwhile True:\n    cevap = input(\"Giriş yapınız\")\n    if cevap.isdigit():\n        toplam += int(cevap)\n        sayac +=1\n    elif cevap.lower()==\"tamam\":\n        ort = toplam / sayac\n        print(\"Girilen {} adet sayaının toplamı {}, ortalaması {}\".format(sayac,toplam,ort))",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "ort",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "ort = 0\nwhile True:\n    cevap = input(\"Giriş yapınız\")\n    if cevap.isdigit():\n        toplam += int(cevap)\n        sayac +=1\n    elif cevap.lower()==\"tamam\":\n        ort = toplam / sayac\n        print(\"Girilen {} adet sayaının toplamı {}, ortalaması {}\".format(sayac,toplam,ort))\n        break",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "liste",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "liste = []\ntoplam = 0\nsayac = 0\nharf = \"Tamam\"\nwhile True:\n    sayı = input(\"{} inci sayıyı giriniz :\".format(sayac+1))\n    #if sayı not in liste:\n    if sayı.isdigit():\n        liste += [int(sayı)]\n        sayac += 1",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "toplam",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "toplam = 0\nsayac = 0\nharf = \"Tamam\"\nwhile True:\n    sayı = input(\"{} inci sayıyı giriniz :\".format(sayac+1))\n    #if sayı not in liste:\n    if sayı.isdigit():\n        liste += [int(sayı)]\n        sayac += 1\n        print(liste)",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "sayac",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "sayac = 0\nharf = \"Tamam\"\nwhile True:\n    sayı = input(\"{} inci sayıyı giriniz :\".format(sayac+1))\n    #if sayı not in liste:\n    if sayı.isdigit():\n        liste += [int(sayı)]\n        sayac += 1\n        print(liste)\n    elif sayı.lower() == harf.lower():",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "harf",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "harf = \"Tamam\"\nwhile True:\n    sayı = input(\"{} inci sayıyı giriniz :\".format(sayac+1))\n    #if sayı not in liste:\n    if sayı.isdigit():\n        liste += [int(sayı)]\n        sayac += 1\n        print(liste)\n    elif sayı.lower() == harf.lower():\n        for i in liste:",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "sayi",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "sayi = int(input(\"Lütfen bir sayı giriniz :\"))\nmil = sayi / 1609,344\ninc = sayi * 0.0254\nyard = sayi * 1.0936133\nfeet = sayi * 3.28\nprint(\"Bir Metre :\",mil,\" mil eder\")\nprint(\"Bir Metre :\",inc,\" inc eder\")\nprint(\"Bir Metre :\",yard,\" yard eder\")\nprint(\"Bir Metre :\",feet,\" feet eder\")\n#ALISTIRMA - 11",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "mil",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "mil = sayi / 1609,344\ninc = sayi * 0.0254\nyard = sayi * 1.0936133\nfeet = sayi * 3.28\nprint(\"Bir Metre :\",mil,\" mil eder\")\nprint(\"Bir Metre :\",inc,\" inc eder\")\nprint(\"Bir Metre :\",yard,\" yard eder\")\nprint(\"Bir Metre :\",feet,\" feet eder\")\n#ALISTIRMA - 11\n#Klavyeden girilen tam sayının haftanın hangi gününe denk geldigini ekrana yazdırın. Orn.: Gırıs : 2, Cıkıs : Salı gibi",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "inc",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "inc = sayi * 0.0254\nyard = sayi * 1.0936133\nfeet = sayi * 3.28\nprint(\"Bir Metre :\",mil,\" mil eder\")\nprint(\"Bir Metre :\",inc,\" inc eder\")\nprint(\"Bir Metre :\",yard,\" yard eder\")\nprint(\"Bir Metre :\",feet,\" feet eder\")\n#ALISTIRMA - 11\n#Klavyeden girilen tam sayının haftanın hangi gününe denk geldigini ekrana yazdırın. Orn.: Gırıs : 2, Cıkıs : Salı gibi\n#------------------------------------------------",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "yard",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "yard = sayi * 1.0936133\nfeet = sayi * 3.28\nprint(\"Bir Metre :\",mil,\" mil eder\")\nprint(\"Bir Metre :\",inc,\" inc eder\")\nprint(\"Bir Metre :\",yard,\" yard eder\")\nprint(\"Bir Metre :\",feet,\" feet eder\")\n#ALISTIRMA - 11\n#Klavyeden girilen tam sayının haftanın hangi gününe denk geldigini ekrana yazdırın. Orn.: Gırıs : 2, Cıkıs : Salı gibi\n#------------------------------------------------\nwhile True:",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "feet",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "feet = sayi * 3.28\nprint(\"Bir Metre :\",mil,\" mil eder\")\nprint(\"Bir Metre :\",inc,\" inc eder\")\nprint(\"Bir Metre :\",yard,\" yard eder\")\nprint(\"Bir Metre :\",feet,\" feet eder\")\n#ALISTIRMA - 11\n#Klavyeden girilen tam sayının haftanın hangi gününe denk geldigini ekrana yazdırın. Orn.: Gırıs : 2, Cıkıs : Salı gibi\n#------------------------------------------------\nwhile True:\n    sayi = int(input(\"Lütfen Bir Sayı Giriniz :\"))",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "txtToPrint",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "txtToPrint = input(\"Girbakalım bişeyler : \")\nletterStartIndex = 0\nfor i in txtToPrint:\n    if not i.isdigit():\n        letterStartIndex = txtToPrint.index(i)\n        if (letterStartIndex == 0):\n            print(\"Hoppala paşam, malkara keşan\")\n            print(\"İfaden sayı ile başlamıyor senin.. Hayırdır...\")\n        break\nnumberPart = txtToPrint[:letterStartIndex:]",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "letterStartIndex",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "letterStartIndex = 0\nfor i in txtToPrint:\n    if not i.isdigit():\n        letterStartIndex = txtToPrint.index(i)\n        if (letterStartIndex == 0):\n            print(\"Hoppala paşam, malkara keşan\")\n            print(\"İfaden sayı ile başlamıyor senin.. Hayırdır...\")\n        break\nnumberPart = txtToPrint[:letterStartIndex:]\ntxtPart = txtToPrint[letterStartIndex::]",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "numberPart",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "numberPart = txtToPrint[:letterStartIndex:]\ntxtPart = txtToPrint[letterStartIndex::]\nfor i in range(int(numberPart)):\n    print(txtPart, \":) İyi bayramlar\")",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "txtPart",
        "kind": 5,
        "importPath": "Odevler.RamazanSekeriCozumu",
        "description": "Odevler.RamazanSekeriCozumu",
        "peekOfCode": "txtPart = txtToPrint[letterStartIndex::]\nfor i in range(int(numberPart)):\n    print(txtPart, \":) İyi bayramlar\")",
        "detail": "Odevler.RamazanSekeriCozumu",
        "documentation": {}
    },
    {
        "label": "hesapla",
        "kind": 2,
        "importPath": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "description": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "peekOfCode": "def hesapla(oyuncu, bilgisayar):\n    global oyuncuPuan\n    global bilgisayarPuan\n    global berabere\n    if oyuncu == bilgisayar:\n        print(\"Berabere...\")\n        berabere +=1\n    elif oyuncu == \"taş\":\n        if bilgisayar == \"makas\":\n            print(\"Oyuncu kazandı...\")",
        "detail": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "documentation": {}
    },
    {
        "label": "puanYazdir",
        "kind": 2,
        "importPath": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "description": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "peekOfCode": "def puanYazdir():\n    print(\"Oyuncu : {}, Bilgisayar : {}, Berabere : {}\".format(oyuncuPuan, bilgisayarPuan, berabere))\n    if oyuncuPuan == bilgisayarPuan : \n        print(\"Sonuç : Berabere\")\n    elif oyuncuPuan > bilgisayarPuan:\n        print(\"Kazanan : Oyuncu\")\n    else:\n        print(\"Kazanan : Bilgisayar\")",
        "detail": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "documentation": {}
    },
    {
        "label": "oyuncuPuan",
        "kind": 5,
        "importPath": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "description": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "peekOfCode": "oyuncuPuan = 0\nbilgisayarPuan = 0\nberabere = 0\nsecenekler = [\"taş\", \"kağıt\", \"makas\"]\ngirilebilirDegerler = [\"1\",\"2\",\"3\",\"q\"]\ndef hesapla(oyuncu, bilgisayar):\n    global oyuncuPuan\n    global bilgisayarPuan\n    global berabere\n    if oyuncu == bilgisayar:",
        "detail": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "documentation": {}
    },
    {
        "label": "bilgisayarPuan",
        "kind": 5,
        "importPath": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "description": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "peekOfCode": "bilgisayarPuan = 0\nberabere = 0\nsecenekler = [\"taş\", \"kağıt\", \"makas\"]\ngirilebilirDegerler = [\"1\",\"2\",\"3\",\"q\"]\ndef hesapla(oyuncu, bilgisayar):\n    global oyuncuPuan\n    global bilgisayarPuan\n    global berabere\n    if oyuncu == bilgisayar:\n        print(\"Berabere...\")",
        "detail": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "documentation": {}
    },
    {
        "label": "berabere",
        "kind": 5,
        "importPath": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "description": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "peekOfCode": "berabere = 0\nsecenekler = [\"taş\", \"kağıt\", \"makas\"]\ngirilebilirDegerler = [\"1\",\"2\",\"3\",\"q\"]\ndef hesapla(oyuncu, bilgisayar):\n    global oyuncuPuan\n    global bilgisayarPuan\n    global berabere\n    if oyuncu == bilgisayar:\n        print(\"Berabere...\")\n        berabere +=1",
        "detail": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "documentation": {}
    },
    {
        "label": "secenekler",
        "kind": 5,
        "importPath": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "description": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "peekOfCode": "secenekler = [\"taş\", \"kağıt\", \"makas\"]\ngirilebilirDegerler = [\"1\",\"2\",\"3\",\"q\"]\ndef hesapla(oyuncu, bilgisayar):\n    global oyuncuPuan\n    global bilgisayarPuan\n    global berabere\n    if oyuncu == bilgisayar:\n        print(\"Berabere...\")\n        berabere +=1\n    elif oyuncu == \"taş\":",
        "detail": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "documentation": {}
    },
    {
        "label": "girilebilirDegerler",
        "kind": 5,
        "importPath": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "description": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "peekOfCode": "girilebilirDegerler = [\"1\",\"2\",\"3\",\"q\"]\ndef hesapla(oyuncu, bilgisayar):\n    global oyuncuPuan\n    global bilgisayarPuan\n    global berabere\n    if oyuncu == bilgisayar:\n        print(\"Berabere...\")\n        berabere +=1\n    elif oyuncu == \"taş\":\n        if bilgisayar == \"makas\":",
        "detail": "tasKagitMakasOyunu.kutuphane.kutuphane1",
        "documentation": {}
    }
]